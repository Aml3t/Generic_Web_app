{"version":3,"sources":["./src/app/services/authActivator.service.ts","./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/loginPage.component.ts","./src/app/pages/loginPage.component.html","./src/app/app.module.ts","./src/app/pages/checkout.component.html","./src/app/pages/checkout.component.ts","./src/app/router/index.ts","./src/app/pages/shopPage.component.ts","./src/app/pages/shopPage.component.html","./src/app/shared/Order.ts","./src/app/views/cartView.component.html","./src/app/views/cartView.component.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Store } from \"./store.service\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n\r\n\r\n    constructor(private store: Store, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot)\r\n        : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        if (this.store.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Order, OrderItem } from \"../shared/Order\";\r\nimport { Product } from \"../shared/Product\";\r\n\r\n@Injectable()\r\nexport class Store {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n    public token = \"\";\r\n    public expiration = new Date();\r\n\r\n    get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.expiration < new Date();\r\n    }\r\n\r\n\r\n    checkout() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`);\r\n\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: headers\r\n        })\r\n            .pipe(map(() => {\r\n                this.order = new Order();\r\n            }));\r\n    }\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<[]>(\"/api/products\")\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n    addToOrder(product: Product) {\r\n\r\n        let item: OrderItem;\r\n\r\n        item = this.order.items.find(o => o.productId === product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productTitle = product.title;\r\n            item.productArtId = product.artId;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: \"app.component.html\",\n    styles: []\n})\nexport class AppComponent {\n    title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <h3>{{ title }}</h3>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\"\r\n})\r\n\r\nexport class LoginPage {\r\n    constructor(private store: Store, private router: Router) { } \r\n\r\n    public creds = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onLogin() {\r\n        alert(\"Logging in...\");\r\n    }\r\n\r\n}","<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n        <form (submit)=\"onLogin()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" password=\"password\" [(ngModel)]=\"creds.password\" />\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" />\n                <a href=\"#\" class=\"btn btn-default\">Cancel</a>\n            </div>\n        </form>\n        {{ creds }}\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport ProductListView from './views/productListView.component';\r\nimport { Store } from './services/store.service';\r\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { CheckoutPage } from './pages/checkout.component';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.service';\r\nimport { FormsModule } from '@angular/forms';\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductListView,\n        CartView,\n        ShopPage,\n        CheckoutPage,\n        LoginPage\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        router,\n        FormsModule\n    ],\n    providers: [\n        Store,\n        AuthActivator\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"row\">\n  <h3>Confirm Order</h3>\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n  <table class=\"table table-bordered table-hover\">\n    <tr *ngFor=\"let o of store.order.items\">\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n      <td>{{ o.quantity }}</td>\n      <td>{{ o.unitPrice | currency }}</td>\n      <td>{{ (o.unitPrice * o.quantity) | currency }}</td>\n    </tr>\n  </table>\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\n      <table class=\"table table-condensed\">\n          <tr>\n              <td class=\"text-right\">Subtotal</td>\n              <td class=\"text-right\">{{ store.order.subtotal | currency }}</td>\n          </tr>\n          <tr>\n              <td class=\"text-right\">Shipping</td>\n              <td class=\"text-right\">$ 0.00</td>\n          </tr>\n          <tr>\n              <td class=\"text-right\">Total:</td>\n              <td class=\"text-right\">{{ store.order.subtotal | currency }}</td>\n          </tr>\n      </table>\n      <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n      <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n  </div>\n\n</div>","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"../services/store.service\";\r\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutPage {\n\n    public errorMessage = \"\";\n\n    constructor(public store: Store, private router: Router) {\n    }\n\n    onCheckout() {\n        this.errorMessage = \"\";\n        this.store.checkout()\n            .subscribe(() => {\n                this.router.navigate([\"/\"]);\r\n            }, err => {\n                this.errorMessage = `Failed to checkout: ${err}`;\n            })\n    }\n}","import { RouterModule } from \"@angular/router\";\r\nimport { CheckoutPage } from \"../pages/checkout.component\";\r\nimport { ShopPage } from \"../pages/shopPage.component\";\r\nimport { LoginPage } from \"../pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator.service\";\r\n\r\n\r\n\r\nconst routes = [\r\n    { path: \"\", component: ShopPage },\r\n    { path: \"checkout\", component: CheckoutPage, canActivate: [AuthActivator] },\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo: \"/\" }\r\n\r\n];\r\n\r\nconst router = RouterModule.forRoot(routes,{\r\n        useHash: false\r\n    });\r\n\r\nexport default router;","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"shop-page\",\r\n    templateUrl: \"shopPage.component.html\"\r\n})\r\nexport class ShopPage {\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>","export class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string;\r\n    items: OrderItem[] = [];\r\n\r\n    get subtotal(): number {\r\n\r\n        const result = this.items.reduce(\r\n            (tot, val) => {\r\n                return tot + (val.unitPrice * val.quantity);\r\n            }, 0);\r\n\r\n        return result;\r\n    }\r\n\r\n}","<h3>Cart</h3>\r\n<div>Count: {{ store.order.items.length }}</div>\r\n<table class=\"table table-condensed table-striped\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of store.order.items\">\r\n            <td>\r\n                <img src=\"/img/{{item.productArtId}}.jpg\" alt=\"{{ item.productArtist }}\"\r\n                     class=\"img-fluid product-thumb\" />\r\n            </td>\r\n            <td>{{ item.productCategory}}</td>\r\n            <td>{{ item.quantity}}</td>\r\n            <td>{{ item.unitPrice | currency:\"EUR\"}}</td>\r\n            <td>{{ item.unitPrice * item.quantity | currency:\"EUR\"}}</td>\r\n        </tr>\r\n    </tbody>\r\n    <tfoot>\r\n        <tr>\r\n            <td colspan=\"5\"><strong>Subtotal: {{ store.order.subtotal }}</strong></td>\r\n        </tr>\r\n    </tfoot>\r\n</table>\r\n<a class=\"btn btn-success\" *ngIf =\"store.order.items.length > 0\" routerLink=\"checkout\">Checkout</a> \r\n<hr />","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"cart\",\r\n    templateUrl: \"cartView.component.html\",\r\n    styleUrls: [\"cartView.component.css\"]\r\n})\r\n\r\n\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n}","<div class=\"row\">\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid product-image\" alt=\"{{ p.title }}\" />\r\n            <h5>{{ p.category }} - {{ p.size }}</h5>\r\n            <ul class=\"products-props\">\r\n                <li>Price: {{ p.price | currency:\"EUR\" }}</li>\r\n                <li>Artist: {{ p.artist }}</li>\r\n                <li>Title: {{ p.title }}</li>\r\n                <!--@if (!string.IsNullOrWhiteSpace(p.ArtDescription))\r\n                {-->\r\n                <li>{{ p.artDescription }}</li>\r\n                <!--}-->\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\"\r\n                    style=\"display: block; margin: auto;\"(click) =\"store.addToOrder(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productListView.component.html\",\r\n    styleUrls: [\"productListView.component.css\"]\r\n})\r\nexport default class ProductListView implements OnInit {\r\n\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(() => {\r\n                // do something\r\n            });  // <- Kicks Off the operation\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}