{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;ACX5D,MAAM,KAAK;IAFlB;QAGW,aAAQ,GAAG,CAAC;gBACf,KAAK,EAAE,cAAc;gBACrB,KAAK,EAAE,OAAO;aACjB;YACD;gBACI,KAAK,EAAE,iBAAiB;gBACxB,KAAK,EAAE,OAAO;aACjB,CAAC,CAAC;KACN;;0DATY,KAAK;wFAAL,KAAK,WAAL,KAAK;;;;;;;;;;;;;;;;;;;ACGX,MAAM,YAAY;IALzB;QAMI,UAAK,GAAG,MAAM,CAAC;KAClB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAAiB;QACb,yEAAmB;QACf,qEAAI;QAAA,uDAAW;QAAA,4DAAK;QACpB,0EAA6B;QACjC,4DAAM;QACN,yEAAmB;QACf,qEAAI;QAAA,+DAAI;QAAA,4DAAK;QACjB,4DAAM;QACV,4DAAM;;QANM,0DAAW;QAAX,0EAAW;;;;;;;;;;;;;;ACDvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACF;AACT;AACiB;AACf;;AAgB1C,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFN,2DAAY;6FAHb;QACP,6DAAK;KACR,YANQ;YACL,uEAAa;YACb,qEAAgB;SACnB;mIAMQ,SAAS,mBAZd,2DAAY;QACZ,wEAAe,aAGf,uEAAa;QACb,qEAAgB;;;;;;;;;;;;;;;;;;;;;;ICZhB,qEAA+B;IAAA,uDAA6B;IAAA,4DAAK;;;IAAlC,0DAA6B;IAA7B,uGAA6B;;ACKrD,MAAM,eAAe;IAIhC,YAAoB,KAAY;QAAZ,UAAK,GAAL,KAAK,CAAO;QAFzB,aAAQ,GAAG,EAAE,CAAC;QAGjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;IACnC,CAAC;;8EANgB,eAAe;+FAAf,eAAe;QDPpC,yEAAiB;QACb,qEAAI;QACA,yGAAiE;QACrE,4DAAK;QACT,4DAAM;;QAFoB,0DAAW;QAAX,iFAAW;;;;;;;;;;;;;;;;;;;;AEFU;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAGD,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACZpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\n\r\nexport class Store {\r\n    public products = [{\r\n        title: \"Van Gogh Mug\",\r\n        price: \"19.99\"\r\n    },\r\n    {\r\n        title: \"Van Gosh Poster\",\r\n        price: \"29.99\"\r\n    }];\r\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: \"app.component.html\",\n    styles: []\n})\nexport class AppComponent {\n    title = 'Shop';\n}\n","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <h3>{{ title }}</h3>\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <h3>Cart</h3>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport ProductListView from './views/productListView.component';\r\nimport { Store } from './services/store.service';\r\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        ProductListView\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule\n    ],\n    providers: [\n        Store,\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div class=\"row\">\r\n    <ul>\r\n        <li *ngFor=\"let p of products\">{{ p.title }}: ${{ p.price }}</li>\r\n    </ul>\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { Store } from \"../services/store.service\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productListView.component.html\"\r\n})\r\nexport default class ProductListView {\r\n\r\n    public products = [];\r\n\r\n    constructor(private store: Store) {\r\n        this.products = store.products;\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}